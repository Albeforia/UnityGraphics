Pass
{
	Name "DBufferMesh"
	Tags {"LightMode"="DBufferMesh"}


	Cull Front
    ZWrite Off
    ZTest Greater


    ColorMask ${VFXDecalColorMask0}
    ColorMask ${VFXDecalColorMask1} 1
    ColorMask ${VFXDecalColorMask2} 2
    ColorMask ${VFXDecalColorMask3} 3

	HLSLPROGRAM
	#pragma target 4.5
	#pragma multi_compile _ LIGHT_LAYERS
	#pragma multi_compile _ DEBUG_DISPLAY

	#define UNITY_MATERIAL_LIT

	${VFXIncludeRP("VFXDecalVaryings.template")}
    #include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Decal/Decal.hlsl"
	#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Decal/DecalPrepassBuffer.hlsl"


	struct ps_input
	{
		float4 pos : SV_POSITION;
		${VFXHDRPDecalDeclareVaryings}
		UNITY_VERTEX_OUTPUT_STEREO
	};

	${VFXHDRPDecalVaryingsMacros}




	${VFXBegin:VFXVertexAdditionalProcess}
	${VFXHDRPDecalFillVaryings}
	${VFXEnd}


//TODO : Vertex shader of decal must perform z bias or view bias (BiasType), need to create one
${VFXInclude("Shaders/ParticleHexahedron/Pass.template")}
#define SHADERPASS SHADERPASS_VFX_DBUFFER_PROJECTOR
${VFXIncludeRP("VFXDecal.template")}



//EndTODO

	#pragma fragment frag
	void frag(ps_input i, OUTPUT_DBUFFER(outDBuffer))
	{
		UNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX(i);
		float3 normalWS = float3(0,1,0); //TODO : compute it properly
		VFXComputePixelOutputToDBuffer(i, normalWS,outDBuffer);
	}
	ENDHLSL
}
