${VFXShaderTags}

${VFXInclude("Shaders/VFXParticleCommon.template")}
${VFXOutputRenderState}

HLSLINCLUDE

${VFXGlobalInclude}
${VFXGlobalDeclaration}

#define VFX_NEEDS_COLOR_INTERPOLATOR (VFX_USE_COLOR_CURRENT || VFX_USE_ALPHA_CURRENT)
#if HAS_STRIPS
#define VFX_OPTIONAL_INTERPOLATION
#else
#define VFX_OPTIONAL_INTERPOLATION nointerpolation
#endif

ByteAddressBuffer attributeBuffer;

#if VFX_HAS_INDIRECT_DRAW
StructuredBuffer<uint> indirectBuffer;
#endif

#if USE_DEAD_LIST_COUNT
ByteAddressBuffer deadListCount;
#endif

#if HAS_STRIPS
StructuredBuffer<uint> stripDataBuffer;
#endif

#if VFX_FEATURE_MOTION_VECTORS
ByteAddressBuffer elementToVFXBufferPrevious;

#ifdef VFX_FEATURE_MOTION_VECTORS_VERTS
#define VFX_FEATURE_MOTION_VECTORS_INTERPOLATION noperspective
#else
#define VFX_FEATURE_MOTION_VECTORS_INTERPOLATION
#endif

#endif

#define VFX_USE_INSTANCING 1
#define VFX_INSTANCING_INDIRECTION 1
#define VFX_INSTANCING_VARIABLE_SIZE 1

#if VFX_INSTANCING_INDIRECTION
StructuredBuffer<uint> instanceIndirectionBuffer;
#endif
#if VFX_INSTANCING_VARIABLE_SIZE
StructuredBuffer<uint> instancePrefixSum;
#endif

#if VFX_USE_INSTANCING

#endif

CBUFFER_START(outputParams)
	float nbMax;
	float systemSeed;
	float3 cameraXRSettings;
CBUFFER_END

// Helper macros to always use a valid instanceID
#if defined(UNITY_STEREO_INSTANCING_ENABLED)
	#define VFX_DECLARE_INSTANCE_ID     UNITY_VERTEX_INPUT_INSTANCE_ID
	#define VFX_GET_INSTANCE_ID(i)      unity_InstanceID
#else
	#define VFX_DECLARE_INSTANCE_ID     uint instanceID : SV_InstanceID;
	#define VFX_GET_INSTANCE_ID(i)      i.instanceID
#endif

ENDHLSL
