#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"
#include "Packages/com.unity.render-pipelines.high-definition/Runtime/Material/Visibility/VisibilityOITResources.hlsl"

//#pragma enable_d3d11_debug_symbols

#pragma kernel MainResolveOffscreenLighting

#define GROUP_SIZE 8

RW_TEXTURE2D_X(float4, _OutputTexture);
RW_TEXTURE2D_X(float, _OutputDepthTexture);

[numthreads(GROUP_SIZE, GROUP_SIZE, 1)]
void MainResolveOffscreenLighting(int3 dispatchThreadId : SV_DispatchThreadID)
{
    UNITY_XR_ASSIGN_VIEW_INDEX(dispatchThreadId.z);
    if (any((float2)dispatchThreadId.xy > _ScreenSize.xy))
        return;

    PositionInputs posInputs = GetPositionInput(float2(dispatchThreadId.xy), _ScreenSize.zw, uint2(GROUP_SIZE, GROUP_SIZE));

    _OutputTexture[COORD_TEXTURE2D_X(posInputs.positionSS)] = float4(1.0, 0.0, 0.0, 1.0);
    _OutputDepthTexture[COORD_TEXTURE2D_X(posInputs.positionSS)] = 1.0;
}


