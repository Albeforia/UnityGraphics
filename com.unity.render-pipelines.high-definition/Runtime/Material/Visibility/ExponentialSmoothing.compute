
#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/GeometricTools.hlsl"
#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/TextureXR.hlsl"
#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"

//#pragma enable_d3d11_debug_symbols
#pragma only_renderers d3d11 playstation xboxone xboxseries vulkan metal switch

#pragma kernel ExponentialSmoothing

TEXTURE2D_X(_PreviousTexture);
RW_TEXTURE2D_X(float4, _CurrentTexture);
RW_TEXTURE2D_X(float4, _OutputTexture);

float _Coefficient;

[numthreads(8, 8, 1)]
void ExponentialSmoothing(int3 dispatchThreadId : SV_DispatchThreadID)
{
    UNITY_XR_ASSIGN_VIEW_INDEX(dispatchThreadId.z);
    if (any((float2)dispatchThreadId.xy > _ScreenSize.xy))
        return;

    float4 x0 = _PreviousTexture[COORD_TEXTURE2D_X(dispatchThreadId.xy)];
    float4 x1 = _OutputTexture[COORD_TEXTURE2D_X(dispatchThreadId.xy)];

    float4 y = lerp(x0, x1, _Coefficient);

    _CurrentTexture[COORD_TEXTURE2D_X(dispatchThreadId.xy)] = y;
    _OutputTexture[COORD_TEXTURE2D_X(dispatchThreadId.xy)] = y;
}
